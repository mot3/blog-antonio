It is better to introduce the app in the settings
'blog/apps/BlogConfig'

This command displays exactly the code generated for the models
>> ./manage.py sqlmigrate

Get a full shell
>> ./manage.py shell

Database command
all_posts = Post.objects.all()

user = User.objects.get(username='admin')

post = Post(title='Another post', slug='another-post', body='Post body.', author=user)
post.save()

Post.objects.create(title='One more post',
                    slug='one-more-post',
                    body='Post body.',
                    author=user)

post.title = 'New title'
post.save()

Post.objects.filter(publish__year=2020)
Post.objects.filter(publish__year=2020, author__username='admin')
Post.objects.filter(publish__year=2020).filter(author__username='admin')
Post.objects.filter(publish__year=2020).exclude(title__startswith='Why')

Post.objects.order_by('title')
Post.objects.order_by('-title') # vice versa

post = Post.objects.get(id=1)
post.delete()


We have
{{ form.as_p }}
as_ul
as_table
...


We can instead use from {{ form.as_p }} used from
{% for field in form %}
    <div>
        {{ field.errors }}
        {{ field.label_tag }} {{ field }}
    </div>
{% endfor %}


The {% csrf_token %} template tag introduces a hidden field with an autogenerated token 
to avoid cross-site request forgery (CSRF) attacks.
These attacks consist of a malicious website or program performing an unwanted action 
for a user on your site. You can find more information about this at https://owasp.org/www-community/attacks/csrf.
The preceding tag generates a hidden field that looks like this:
<input type='hidden' name='csrfmiddlewaretoken' value='26JjKo2lcEtYkGoV9z4XmJIEHLXN5LDR' />